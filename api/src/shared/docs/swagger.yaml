openapi: 3.0.0
info:
  title: API de Nota Fiscal
  version: 1.0.0
  description: |
    ### Documentação da API de emissão de nota fiscal.

    ---
    ### Todos os endpoints protegidos exigem autenticação via JWT no header:
    - **GET : /clients**
    - **POST : /products**
    - **POST : /invoices**
    - **GET : /invoices**
    - **GET : /invoices/:id**
    ```
    Authorization: Bearer {seu_token}
    ```

servers:
  - url: http://localhost:3000

security:
  - bearerAuth: []

paths:
  /clients:
    post:
      summary: Cria um novo cliente
      tags:
        - Clientes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteInput'
      responses:
        '201':
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteResponse'
        '400':
          description: Erro de validação ou cliente já registrado
    get:
      summary: Lista todos os clientes
      tags:
        - Clientes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClienteOutput'
        '400':
          description: Nenhum cliente encontrado
        '401':
          description: Não autorizado

  /products:
    post:
      summary: Cria um novo produto
      tags:
        - Produtos
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProdutoInput'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoResponse'
        '400':
          description: Erro de validação ou produto já registrado
        '401':
          description: Não autorizado
    get:
      summary: Lista todos os produtos
      tags:
        - Produtos
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoOutput'
        '400':
          description: Nenhum produto encontrado

  /auth/login:
    post:
      summary: Realiza login do cliente
      tags:
       - Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '201':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Erro de login

  /invoices:
    post:
      summary: Emite uma nova nota fiscal
      tags:
        - Nota Fiscal
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotaFiscalInput'
      responses:
        '201':
          description: NotaFiscal criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotaFiscalResponse'
        '400':
          description: Erro de emissao
        '401':
          description: Não autorizado
    get:
      summary: Lista todos as notas fiscais
      tags:
        - Nota Fiscal
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de notas fiscais
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotaFiscalOutput'
        '400':
          description: Requisição inválida ou nota fiscal não encontrada
        '401':
          description: Não autorizado

  /invoices/{id}:
    get:
      summary: Busca uma nota fiscal pelo ID
      tags:
        - Nota Fiscal
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID da nota fiscal
          example: "5194cd72-3e28-434e-8e73-b62495b873e0"
      responses:
        '200':
          description: Lista de nota fiscal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotaFiscalOutput'
        '400':
          description: Requisição inválida ou nota fiscal não encontrada
        '401':
          description: Não autorizado

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ClienteInput:
      type: object
      properties:
        nome:
          type: string
          example: "Empresa XPTO"
        email:
          type: string
          example: "contato@xpto.com"
        cnpj:
          type: string
          example: "12345678000199"
        senha:
          type: string
          example: "Senha@123"
      required:
        - nome
        - cnpj
        - email
        - senha

    ClienteOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "9d5b5c2f-6c35-4a1d-a4e1-1b9a3b9a3c9f"
        nome:
          type: string
          example: "Empresa XPTO"
        email:
          type: string
          example: "contato@xpto.com"
        cnpj:
          type: string
          example: "12345678000199"

    ClienteResponse:
      type: object
      properties:
        message:
          type: string
          example: "Cliente criado com sucesso"
        novoCliente:
          $ref: '#/components/schemas/ClienteOutput'

    ProdutoInput:
      type: object
      properties:
        nome:
          type: string
          example: "Cerveja Heineken"
        ncm:
          type: string
          example: "25232990"
        cfop:
          type: string
          example: "1101"
        preco:
          type: number
          example: 16.99
        industrializado:
          type: bool
          example: true
      required:
        - nome
        - ncm
        - cfop
        - preco
        - industrializado

    ProdutoOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "60bf14cb-8ba2-4fe7-8e87-5d6e4c9d1777"
        nome:
          type: string
          example: "Cerveja Heineken"
        ncm:
          type: string
          example: "25232990"
        cfop:
          type: string
          example: "1101"
        preco:
          type: number
          example: 16.99
        industrializado:
          type: boolean
          example: true
          
    ProdutoResponse:
      type: object
      properties:
        message:
          type: string
          example: "Produto criado com sucesso"
        novoProduto:
          $ref: '#/components/schemas/ProdutoOutput'

    LoginInput:
      type: object
      properties:
        email:
          type: string
          example: "contato@xpto.com"
        senha:
          type: string
          example: "Senha@123"
      required:
        - email
        - senha

    LoginOutput:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQwN2NjMmU2LTIyZWQtNGYzOS04YzM5LWU5OTViOWFlOGU1NiIsImVtYWlsIjoidGVzdGVAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDk5MzQ3MTgsImV4cCI6MTc0OTkzODMxOH0.IOlTquhaxoxZlDrzejgurVWCiz5QDjdV-aEnR2mXdqI"
        cliente:
          type: object
          properties:
            id:
              type: string
              example: "407cc2e6-22ed-4f39-8c39-e995b9ae8e56"
            nome:
              type: string
              example: Empresa XPTO

    LoginResponse:
      type: object
      properties:
        message:
          type: string
          example: "Login realizado com sucesso"
        novoLogin:
          $ref: '#/components/schemas/LoginOutput'

    NotaFiscalInput:
      type: object
      properties:
        clientId:
          type: string
          example: "407cc2e6-22ed-4f39-8c39-e995b9ae8e56"
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                example: "803a3024-c55d-4439-8a67-3d98f7b481fc"
              quantity:
                type: number
                example: 3
            required:
            - productId
            - quantity
      required:
        - clientId
        - products

    NotaFiscalOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "5194cd72-3e28-434e-8e73-b62495b873e0"
        valorTotal:
          type: string
          example: "492.37"
        icmsTotal:
          type: string
          example: "72.64"
        ipiTotal:
          type: string
          example: "16.14"
        xml:
          type: string
          example: "<?xml version='1.0'?>\n<notaFiscal>\n    <cliente>\n        <nome>joao</nome>\n        <cnpj>38372267000182</cnpj>\n        <email>teste@example.com</email>\n    </cliente>\n    <itens>\n        <produto>Cerveja Amstel</produto>\n        <quantidade>3</quantidade>\n        <precoUnitario>21.26</precoUnitario>\n        <icms>11.4804</icms>\n        <ipi>2.5512</ipi>\n        <total>63.78</total>\n    </itens>\n    <itens>\n        <produto>Cerveja Skol</produto>\n        <quantidade>20</quantidade>\n        <precoUnitario>16.99</precoUnitario>\n        <icms>61.164</icms>\n        <ipi>13.592</ipi>\n        <total>339.8</total>\n    </itens>\n    <total>\n        <valorTotal>492.3676</valorTotal>\n        <icmsTotal>72.6444</icmsTotal>\n        <ipiTotal>16.1432</ipiTotal>\n    </total>\n</notaFiscal>"
        cliente:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: "407cc2e6-22ed-4f39-8c39-e995b9ae8e56"
            nome:
              type: string
              example: "Empesa XPTO"
            email:
              type: string
              example: "empresa@xpto.com"
            cnpj:
              type: string
              example: "38372267000182"
        itens:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                example: "04dbd013-da83-4385-8c71-50d4c43b10ae"
              quantidade:
                type: number
                example: 20
              precoUnitario:
                type: string
                example: "16.99"
              icms:
                type: string
                example: "61.16"
              ipi:
                type: string
                example: "13.59"
              total:
                type: string
                example: "339.80"
              produto:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: "8c839f2e-652a-4678-8f96-e24eede56eb7"
                  nome:
                    type: string
                    example: "Cerveja Skol"
                  ncm:
                    type: string
                    example: "25232990"
                  cfop:
                    type: string
                    example: "1101"
                  preco:
                    type: string
                    example: "16.99"
                  industrializado:
                    type: boolean
                    example: true

    NotaFiscalResponse:
      type: object
      properties:
        message:
          type: string
          example: "Nota Fiscal emitida com sucesso"
        novaNotaFiscal:
          $ref: '#/components/schemas/NotaFiscalOutput'
